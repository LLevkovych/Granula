services:
  postgres:
    image: postgres:15
    container_name: granula-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - granula_network

  app:
    build: .
    container_name: granula-app
    env_file:
      - .env
    environment:
      # Fallback if .env not provided
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://postgres@postgres:5432/postgres}
      MAX_CONCURRENCY: ${MAX_CONCURRENCY:-10}
      DB_POOL_SIZE: ${DB_POOL_SIZE:-4}
      DB_MAX_OVERFLOW: ${DB_MAX_OVERFLOW:-0}
      DB_POOL_TIMEOUT: ${DB_POOL_TIMEOUT:-60}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - granula_network
    restart: unless-stopped

networks:
  granula_network:
    driver: bridge

volumes:
  postgres_data: 